/*
Semaphore API

Semaphore API provides endpoints for managing and interacting with the Semaphore UI. This documentation outlines the available operations and data models. 

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package semaphore

import (
	"encoding/json"
)

// checks if the IntegrationExtractValueRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationExtractValueRequest{}

// IntegrationExtractValueRequest struct for IntegrationExtractValueRequest
type IntegrationExtractValueRequest struct {
	Name *string `json:"name,omitempty"`
	ValueSource *string `json:"value_source,omitempty"`
	BodyDataType *string `json:"body_data_type,omitempty"`
	Key *string `json:"key,omitempty"`
	Variable *string `json:"variable,omitempty"`
}

// NewIntegrationExtractValueRequest instantiates a new IntegrationExtractValueRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationExtractValueRequest() *IntegrationExtractValueRequest {
	this := IntegrationExtractValueRequest{}
	return &this
}

// NewIntegrationExtractValueRequestWithDefaults instantiates a new IntegrationExtractValueRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationExtractValueRequestWithDefaults() *IntegrationExtractValueRequest {
	this := IntegrationExtractValueRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IntegrationExtractValueRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationExtractValueRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IntegrationExtractValueRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IntegrationExtractValueRequest) SetName(v string) {
	o.Name = &v
}

// GetValueSource returns the ValueSource field value if set, zero value otherwise.
func (o *IntegrationExtractValueRequest) GetValueSource() string {
	if o == nil || IsNil(o.ValueSource) {
		var ret string
		return ret
	}
	return *o.ValueSource
}

// GetValueSourceOk returns a tuple with the ValueSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationExtractValueRequest) GetValueSourceOk() (*string, bool) {
	if o == nil || IsNil(o.ValueSource) {
		return nil, false
	}
	return o.ValueSource, true
}

// HasValueSource returns a boolean if a field has been set.
func (o *IntegrationExtractValueRequest) HasValueSource() bool {
	if o != nil && !IsNil(o.ValueSource) {
		return true
	}

	return false
}

// SetValueSource gets a reference to the given string and assigns it to the ValueSource field.
func (o *IntegrationExtractValueRequest) SetValueSource(v string) {
	o.ValueSource = &v
}

// GetBodyDataType returns the BodyDataType field value if set, zero value otherwise.
func (o *IntegrationExtractValueRequest) GetBodyDataType() string {
	if o == nil || IsNil(o.BodyDataType) {
		var ret string
		return ret
	}
	return *o.BodyDataType
}

// GetBodyDataTypeOk returns a tuple with the BodyDataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationExtractValueRequest) GetBodyDataTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BodyDataType) {
		return nil, false
	}
	return o.BodyDataType, true
}

// HasBodyDataType returns a boolean if a field has been set.
func (o *IntegrationExtractValueRequest) HasBodyDataType() bool {
	if o != nil && !IsNil(o.BodyDataType) {
		return true
	}

	return false
}

// SetBodyDataType gets a reference to the given string and assigns it to the BodyDataType field.
func (o *IntegrationExtractValueRequest) SetBodyDataType(v string) {
	o.BodyDataType = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *IntegrationExtractValueRequest) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationExtractValueRequest) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *IntegrationExtractValueRequest) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *IntegrationExtractValueRequest) SetKey(v string) {
	o.Key = &v
}

// GetVariable returns the Variable field value if set, zero value otherwise.
func (o *IntegrationExtractValueRequest) GetVariable() string {
	if o == nil || IsNil(o.Variable) {
		var ret string
		return ret
	}
	return *o.Variable
}

// GetVariableOk returns a tuple with the Variable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationExtractValueRequest) GetVariableOk() (*string, bool) {
	if o == nil || IsNil(o.Variable) {
		return nil, false
	}
	return o.Variable, true
}

// HasVariable returns a boolean if a field has been set.
func (o *IntegrationExtractValueRequest) HasVariable() bool {
	if o != nil && !IsNil(o.Variable) {
		return true
	}

	return false
}

// SetVariable gets a reference to the given string and assigns it to the Variable field.
func (o *IntegrationExtractValueRequest) SetVariable(v string) {
	o.Variable = &v
}

func (o IntegrationExtractValueRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationExtractValueRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ValueSource) {
		toSerialize["value_source"] = o.ValueSource
	}
	if !IsNil(o.BodyDataType) {
		toSerialize["body_data_type"] = o.BodyDataType
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Variable) {
		toSerialize["variable"] = o.Variable
	}
	return toSerialize, nil
}

type NullableIntegrationExtractValueRequest struct {
	value *IntegrationExtractValueRequest
	isSet bool
}

func (v NullableIntegrationExtractValueRequest) Get() *IntegrationExtractValueRequest {
	return v.value
}

func (v *NullableIntegrationExtractValueRequest) Set(val *IntegrationExtractValueRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationExtractValueRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationExtractValueRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationExtractValueRequest(val *IntegrationExtractValueRequest) *NullableIntegrationExtractValueRequest {
	return &NullableIntegrationExtractValueRequest{value: val, isSet: true}
}

func (v NullableIntegrationExtractValueRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationExtractValueRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


