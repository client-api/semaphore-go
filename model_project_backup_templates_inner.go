/*
Semaphore API

Semaphore API provides endpoints for managing and interacting with the Semaphore UI. This documentation outlines the available operations and data models. 

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package semaphore

import (
	"encoding/json"
)

// checks if the ProjectBackupTemplatesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectBackupTemplatesInner{}

// ProjectBackupTemplatesInner struct for ProjectBackupTemplatesInner
type ProjectBackupTemplatesInner struct {
	Inventory *string `json:"inventory,omitempty"`
	Repository *string `json:"repository,omitempty"`
	Environment *string `json:"environment,omitempty"`
	View *string `json:"view,omitempty"`
	Name *string `json:"name,omitempty"`
	Playbook *string `json:"playbook,omitempty"`
	Description *string `json:"description,omitempty"`
	AllowOverrideArgsInTask *bool `json:"allow_override_args_in_task,omitempty"`
	SuppressSuccessAlerts *bool `json:"suppress_success_alerts,omitempty"`
	Autorun *bool `json:"autorun,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewProjectBackupTemplatesInner instantiates a new ProjectBackupTemplatesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectBackupTemplatesInner() *ProjectBackupTemplatesInner {
	this := ProjectBackupTemplatesInner{}
	return &this
}

// NewProjectBackupTemplatesInnerWithDefaults instantiates a new ProjectBackupTemplatesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectBackupTemplatesInnerWithDefaults() *ProjectBackupTemplatesInner {
	this := ProjectBackupTemplatesInner{}
	return &this
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetInventory() string {
	if o == nil || IsNil(o.Inventory) {
		var ret string
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetInventoryOk() (*string, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given string and assigns it to the Inventory field.
func (o *ProjectBackupTemplatesInner) SetInventory(v string) {
	o.Inventory = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetRepository() string {
	if o == nil || IsNil(o.Repository) {
		var ret string
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetRepositoryOk() (*string, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given string and assigns it to the Repository field.
func (o *ProjectBackupTemplatesInner) SetRepository(v string) {
	o.Repository = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *ProjectBackupTemplatesInner) SetEnvironment(v string) {
	o.Environment = &v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetView() string {
	if o == nil || IsNil(o.View) {
		var ret string
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetViewOk() (*string, bool) {
	if o == nil || IsNil(o.View) {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasView() bool {
	if o != nil && !IsNil(o.View) {
		return true
	}

	return false
}

// SetView gets a reference to the given string and assigns it to the View field.
func (o *ProjectBackupTemplatesInner) SetView(v string) {
	o.View = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProjectBackupTemplatesInner) SetName(v string) {
	o.Name = &v
}

// GetPlaybook returns the Playbook field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetPlaybook() string {
	if o == nil || IsNil(o.Playbook) {
		var ret string
		return ret
	}
	return *o.Playbook
}

// GetPlaybookOk returns a tuple with the Playbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetPlaybookOk() (*string, bool) {
	if o == nil || IsNil(o.Playbook) {
		return nil, false
	}
	return o.Playbook, true
}

// HasPlaybook returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasPlaybook() bool {
	if o != nil && !IsNil(o.Playbook) {
		return true
	}

	return false
}

// SetPlaybook gets a reference to the given string and assigns it to the Playbook field.
func (o *ProjectBackupTemplatesInner) SetPlaybook(v string) {
	o.Playbook = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProjectBackupTemplatesInner) SetDescription(v string) {
	o.Description = &v
}

// GetAllowOverrideArgsInTask returns the AllowOverrideArgsInTask field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetAllowOverrideArgsInTask() bool {
	if o == nil || IsNil(o.AllowOverrideArgsInTask) {
		var ret bool
		return ret
	}
	return *o.AllowOverrideArgsInTask
}

// GetAllowOverrideArgsInTaskOk returns a tuple with the AllowOverrideArgsInTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetAllowOverrideArgsInTaskOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowOverrideArgsInTask) {
		return nil, false
	}
	return o.AllowOverrideArgsInTask, true
}

// HasAllowOverrideArgsInTask returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasAllowOverrideArgsInTask() bool {
	if o != nil && !IsNil(o.AllowOverrideArgsInTask) {
		return true
	}

	return false
}

// SetAllowOverrideArgsInTask gets a reference to the given bool and assigns it to the AllowOverrideArgsInTask field.
func (o *ProjectBackupTemplatesInner) SetAllowOverrideArgsInTask(v bool) {
	o.AllowOverrideArgsInTask = &v
}

// GetSuppressSuccessAlerts returns the SuppressSuccessAlerts field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetSuppressSuccessAlerts() bool {
	if o == nil || IsNil(o.SuppressSuccessAlerts) {
		var ret bool
		return ret
	}
	return *o.SuppressSuccessAlerts
}

// GetSuppressSuccessAlertsOk returns a tuple with the SuppressSuccessAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetSuppressSuccessAlertsOk() (*bool, bool) {
	if o == nil || IsNil(o.SuppressSuccessAlerts) {
		return nil, false
	}
	return o.SuppressSuccessAlerts, true
}

// HasSuppressSuccessAlerts returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasSuppressSuccessAlerts() bool {
	if o != nil && !IsNil(o.SuppressSuccessAlerts) {
		return true
	}

	return false
}

// SetSuppressSuccessAlerts gets a reference to the given bool and assigns it to the SuppressSuccessAlerts field.
func (o *ProjectBackupTemplatesInner) SetSuppressSuccessAlerts(v bool) {
	o.SuppressSuccessAlerts = &v
}

// GetAutorun returns the Autorun field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetAutorun() bool {
	if o == nil || IsNil(o.Autorun) {
		var ret bool
		return ret
	}
	return *o.Autorun
}

// GetAutorunOk returns a tuple with the Autorun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetAutorunOk() (*bool, bool) {
	if o == nil || IsNil(o.Autorun) {
		return nil, false
	}
	return o.Autorun, true
}

// HasAutorun returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasAutorun() bool {
	if o != nil && !IsNil(o.Autorun) {
		return true
	}

	return false
}

// SetAutorun gets a reference to the given bool and assigns it to the Autorun field.
func (o *ProjectBackupTemplatesInner) SetAutorun(v bool) {
	o.Autorun = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ProjectBackupTemplatesInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectBackupTemplatesInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ProjectBackupTemplatesInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ProjectBackupTemplatesInner) SetType(v string) {
	o.Type = &v
}

func (o ProjectBackupTemplatesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectBackupTemplatesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.View) {
		toSerialize["view"] = o.View
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Playbook) {
		toSerialize["playbook"] = o.Playbook
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AllowOverrideArgsInTask) {
		toSerialize["allow_override_args_in_task"] = o.AllowOverrideArgsInTask
	}
	if !IsNil(o.SuppressSuccessAlerts) {
		toSerialize["suppress_success_alerts"] = o.SuppressSuccessAlerts
	}
	if !IsNil(o.Autorun) {
		toSerialize["autorun"] = o.Autorun
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableProjectBackupTemplatesInner struct {
	value *ProjectBackupTemplatesInner
	isSet bool
}

func (v NullableProjectBackupTemplatesInner) Get() *ProjectBackupTemplatesInner {
	return v.value
}

func (v *NullableProjectBackupTemplatesInner) Set(val *ProjectBackupTemplatesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectBackupTemplatesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectBackupTemplatesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectBackupTemplatesInner(val *ProjectBackupTemplatesInner) *NullableProjectBackupTemplatesInner {
	return &NullableProjectBackupTemplatesInner{value: val, isSet: true}
}

func (v NullableProjectBackupTemplatesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectBackupTemplatesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


