/*
Semaphore API

Semaphore API provides endpoints for managing and interacting with the Semaphore UI. This documentation outlines the available operations and data models. 

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package semaphore

import (
	"encoding/json"
)

// checks if the LoginMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginMetadata{}

// LoginMetadata struct for LoginMetadata
type LoginMetadata struct {
	// List of OIDC providers
	OidcProviders []LoginMetadataOidcProvidersInner `json:"oidc_providers,omitempty"`
}

// NewLoginMetadata instantiates a new LoginMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginMetadata() *LoginMetadata {
	this := LoginMetadata{}
	return &this
}

// NewLoginMetadataWithDefaults instantiates a new LoginMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginMetadataWithDefaults() *LoginMetadata {
	this := LoginMetadata{}
	return &this
}

// GetOidcProviders returns the OidcProviders field value if set, zero value otherwise.
func (o *LoginMetadata) GetOidcProviders() []LoginMetadataOidcProvidersInner {
	if o == nil || IsNil(o.OidcProviders) {
		var ret []LoginMetadataOidcProvidersInner
		return ret
	}
	return o.OidcProviders
}

// GetOidcProvidersOk returns a tuple with the OidcProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginMetadata) GetOidcProvidersOk() ([]LoginMetadataOidcProvidersInner, bool) {
	if o == nil || IsNil(o.OidcProviders) {
		return nil, false
	}
	return o.OidcProviders, true
}

// HasOidcProviders returns a boolean if a field has been set.
func (o *LoginMetadata) HasOidcProviders() bool {
	if o != nil && !IsNil(o.OidcProviders) {
		return true
	}

	return false
}

// SetOidcProviders gets a reference to the given []LoginMetadataOidcProvidersInner and assigns it to the OidcProviders field.
func (o *LoginMetadata) SetOidcProviders(v []LoginMetadataOidcProvidersInner) {
	o.OidcProviders = v
}

func (o LoginMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OidcProviders) {
		toSerialize["oidc_providers"] = o.OidcProviders
	}
	return toSerialize, nil
}

type NullableLoginMetadata struct {
	value *LoginMetadata
	isSet bool
}

func (v NullableLoginMetadata) Get() *LoginMetadata {
	return v.value
}

func (v *NullableLoginMetadata) Set(val *LoginMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginMetadata(val *LoginMetadata) *NullableLoginMetadata {
	return &NullableLoginMetadata{value: val, isSet: true}
}

func (v NullableLoginMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


