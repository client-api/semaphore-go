/*
Semaphore API

Semaphore API provides endpoints for managing and interacting with the Semaphore UI. This documentation outlines the available operations and data models. 

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package semaphore

import (
	"encoding/json"
)

// checks if the Template type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Template{}

// Template struct for Template
type Template struct {
	Id *int32 `json:"id,omitempty"`
	ProjectId *int32 `json:"project_id,omitempty"`
	InventoryId *int32 `json:"inventory_id,omitempty"`
	RepositoryId *int32 `json:"repository_id,omitempty"`
	EnvironmentId *int32 `json:"environment_id,omitempty"`
	ViewId *int32 `json:"view_id,omitempty"`
	Name *string `json:"name,omitempty"`
	Playbook *string `json:"playbook,omitempty"`
	Arguments *string `json:"arguments,omitempty"`
	Description *string `json:"description,omitempty"`
	AllowOverrideArgsInTask *bool `json:"allow_override_args_in_task,omitempty"`
	SuppressSuccessAlerts *bool `json:"suppress_success_alerts,omitempty"`
	App *string `json:"app,omitempty"`
	GitBranch *string `json:"git_branch,omitempty"`
	Type *string `json:"type,omitempty"`
	Autorun *bool `json:"autorun,omitempty"`
	SurveyVars []TemplateSurveyVar `json:"survey_vars,omitempty"`
	Vaults []TemplateVault `json:"vaults,omitempty"`
}

// NewTemplate instantiates a new Template object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplate() *Template {
	this := Template{}
	return &this
}

// NewTemplateWithDefaults instantiates a new Template object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateWithDefaults() *Template {
	this := Template{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Template) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Template) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Template) SetId(v int32) {
	o.Id = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *Template) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *Template) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *Template) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetInventoryId returns the InventoryId field value if set, zero value otherwise.
func (o *Template) GetInventoryId() int32 {
	if o == nil || IsNil(o.InventoryId) {
		var ret int32
		return ret
	}
	return *o.InventoryId
}

// GetInventoryIdOk returns a tuple with the InventoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetInventoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InventoryId) {
		return nil, false
	}
	return o.InventoryId, true
}

// HasInventoryId returns a boolean if a field has been set.
func (o *Template) HasInventoryId() bool {
	if o != nil && !IsNil(o.InventoryId) {
		return true
	}

	return false
}

// SetInventoryId gets a reference to the given int32 and assigns it to the InventoryId field.
func (o *Template) SetInventoryId(v int32) {
	o.InventoryId = &v
}

// GetRepositoryId returns the RepositoryId field value if set, zero value otherwise.
func (o *Template) GetRepositoryId() int32 {
	if o == nil || IsNil(o.RepositoryId) {
		var ret int32
		return ret
	}
	return *o.RepositoryId
}

// GetRepositoryIdOk returns a tuple with the RepositoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetRepositoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RepositoryId) {
		return nil, false
	}
	return o.RepositoryId, true
}

// HasRepositoryId returns a boolean if a field has been set.
func (o *Template) HasRepositoryId() bool {
	if o != nil && !IsNil(o.RepositoryId) {
		return true
	}

	return false
}

// SetRepositoryId gets a reference to the given int32 and assigns it to the RepositoryId field.
func (o *Template) SetRepositoryId(v int32) {
	o.RepositoryId = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *Template) GetEnvironmentId() int32 {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret int32
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetEnvironmentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *Template) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given int32 and assigns it to the EnvironmentId field.
func (o *Template) SetEnvironmentId(v int32) {
	o.EnvironmentId = &v
}

// GetViewId returns the ViewId field value if set, zero value otherwise.
func (o *Template) GetViewId() int32 {
	if o == nil || IsNil(o.ViewId) {
		var ret int32
		return ret
	}
	return *o.ViewId
}

// GetViewIdOk returns a tuple with the ViewId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetViewIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ViewId) {
		return nil, false
	}
	return o.ViewId, true
}

// HasViewId returns a boolean if a field has been set.
func (o *Template) HasViewId() bool {
	if o != nil && !IsNil(o.ViewId) {
		return true
	}

	return false
}

// SetViewId gets a reference to the given int32 and assigns it to the ViewId field.
func (o *Template) SetViewId(v int32) {
	o.ViewId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Template) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Template) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Template) SetName(v string) {
	o.Name = &v
}

// GetPlaybook returns the Playbook field value if set, zero value otherwise.
func (o *Template) GetPlaybook() string {
	if o == nil || IsNil(o.Playbook) {
		var ret string
		return ret
	}
	return *o.Playbook
}

// GetPlaybookOk returns a tuple with the Playbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetPlaybookOk() (*string, bool) {
	if o == nil || IsNil(o.Playbook) {
		return nil, false
	}
	return o.Playbook, true
}

// HasPlaybook returns a boolean if a field has been set.
func (o *Template) HasPlaybook() bool {
	if o != nil && !IsNil(o.Playbook) {
		return true
	}

	return false
}

// SetPlaybook gets a reference to the given string and assigns it to the Playbook field.
func (o *Template) SetPlaybook(v string) {
	o.Playbook = &v
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *Template) GetArguments() string {
	if o == nil || IsNil(o.Arguments) {
		var ret string
		return ret
	}
	return *o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetArgumentsOk() (*string, bool) {
	if o == nil || IsNil(o.Arguments) {
		return nil, false
	}
	return o.Arguments, true
}

// HasArguments returns a boolean if a field has been set.
func (o *Template) HasArguments() bool {
	if o != nil && !IsNil(o.Arguments) {
		return true
	}

	return false
}

// SetArguments gets a reference to the given string and assigns it to the Arguments field.
func (o *Template) SetArguments(v string) {
	o.Arguments = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Template) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Template) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Template) SetDescription(v string) {
	o.Description = &v
}

// GetAllowOverrideArgsInTask returns the AllowOverrideArgsInTask field value if set, zero value otherwise.
func (o *Template) GetAllowOverrideArgsInTask() bool {
	if o == nil || IsNil(o.AllowOverrideArgsInTask) {
		var ret bool
		return ret
	}
	return *o.AllowOverrideArgsInTask
}

// GetAllowOverrideArgsInTaskOk returns a tuple with the AllowOverrideArgsInTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetAllowOverrideArgsInTaskOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowOverrideArgsInTask) {
		return nil, false
	}
	return o.AllowOverrideArgsInTask, true
}

// HasAllowOverrideArgsInTask returns a boolean if a field has been set.
func (o *Template) HasAllowOverrideArgsInTask() bool {
	if o != nil && !IsNil(o.AllowOverrideArgsInTask) {
		return true
	}

	return false
}

// SetAllowOverrideArgsInTask gets a reference to the given bool and assigns it to the AllowOverrideArgsInTask field.
func (o *Template) SetAllowOverrideArgsInTask(v bool) {
	o.AllowOverrideArgsInTask = &v
}

// GetSuppressSuccessAlerts returns the SuppressSuccessAlerts field value if set, zero value otherwise.
func (o *Template) GetSuppressSuccessAlerts() bool {
	if o == nil || IsNil(o.SuppressSuccessAlerts) {
		var ret bool
		return ret
	}
	return *o.SuppressSuccessAlerts
}

// GetSuppressSuccessAlertsOk returns a tuple with the SuppressSuccessAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetSuppressSuccessAlertsOk() (*bool, bool) {
	if o == nil || IsNil(o.SuppressSuccessAlerts) {
		return nil, false
	}
	return o.SuppressSuccessAlerts, true
}

// HasSuppressSuccessAlerts returns a boolean if a field has been set.
func (o *Template) HasSuppressSuccessAlerts() bool {
	if o != nil && !IsNil(o.SuppressSuccessAlerts) {
		return true
	}

	return false
}

// SetSuppressSuccessAlerts gets a reference to the given bool and assigns it to the SuppressSuccessAlerts field.
func (o *Template) SetSuppressSuccessAlerts(v bool) {
	o.SuppressSuccessAlerts = &v
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *Template) GetApp() string {
	if o == nil || IsNil(o.App) {
		var ret string
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetAppOk() (*string, bool) {
	if o == nil || IsNil(o.App) {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *Template) HasApp() bool {
	if o != nil && !IsNil(o.App) {
		return true
	}

	return false
}

// SetApp gets a reference to the given string and assigns it to the App field.
func (o *Template) SetApp(v string) {
	o.App = &v
}

// GetGitBranch returns the GitBranch field value if set, zero value otherwise.
func (o *Template) GetGitBranch() string {
	if o == nil || IsNil(o.GitBranch) {
		var ret string
		return ret
	}
	return *o.GitBranch
}

// GetGitBranchOk returns a tuple with the GitBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetGitBranchOk() (*string, bool) {
	if o == nil || IsNil(o.GitBranch) {
		return nil, false
	}
	return o.GitBranch, true
}

// HasGitBranch returns a boolean if a field has been set.
func (o *Template) HasGitBranch() bool {
	if o != nil && !IsNil(o.GitBranch) {
		return true
	}

	return false
}

// SetGitBranch gets a reference to the given string and assigns it to the GitBranch field.
func (o *Template) SetGitBranch(v string) {
	o.GitBranch = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Template) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Template) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Template) SetType(v string) {
	o.Type = &v
}

// GetAutorun returns the Autorun field value if set, zero value otherwise.
func (o *Template) GetAutorun() bool {
	if o == nil || IsNil(o.Autorun) {
		var ret bool
		return ret
	}
	return *o.Autorun
}

// GetAutorunOk returns a tuple with the Autorun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetAutorunOk() (*bool, bool) {
	if o == nil || IsNil(o.Autorun) {
		return nil, false
	}
	return o.Autorun, true
}

// HasAutorun returns a boolean if a field has been set.
func (o *Template) HasAutorun() bool {
	if o != nil && !IsNil(o.Autorun) {
		return true
	}

	return false
}

// SetAutorun gets a reference to the given bool and assigns it to the Autorun field.
func (o *Template) SetAutorun(v bool) {
	o.Autorun = &v
}

// GetSurveyVars returns the SurveyVars field value if set, zero value otherwise.
func (o *Template) GetSurveyVars() []TemplateSurveyVar {
	if o == nil || IsNil(o.SurveyVars) {
		var ret []TemplateSurveyVar
		return ret
	}
	return o.SurveyVars
}

// GetSurveyVarsOk returns a tuple with the SurveyVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetSurveyVarsOk() ([]TemplateSurveyVar, bool) {
	if o == nil || IsNil(o.SurveyVars) {
		return nil, false
	}
	return o.SurveyVars, true
}

// HasSurveyVars returns a boolean if a field has been set.
func (o *Template) HasSurveyVars() bool {
	if o != nil && !IsNil(o.SurveyVars) {
		return true
	}

	return false
}

// SetSurveyVars gets a reference to the given []TemplateSurveyVar and assigns it to the SurveyVars field.
func (o *Template) SetSurveyVars(v []TemplateSurveyVar) {
	o.SurveyVars = v
}

// GetVaults returns the Vaults field value if set, zero value otherwise.
func (o *Template) GetVaults() []TemplateVault {
	if o == nil || IsNil(o.Vaults) {
		var ret []TemplateVault
		return ret
	}
	return o.Vaults
}

// GetVaultsOk returns a tuple with the Vaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Template) GetVaultsOk() ([]TemplateVault, bool) {
	if o == nil || IsNil(o.Vaults) {
		return nil, false
	}
	return o.Vaults, true
}

// HasVaults returns a boolean if a field has been set.
func (o *Template) HasVaults() bool {
	if o != nil && !IsNil(o.Vaults) {
		return true
	}

	return false
}

// SetVaults gets a reference to the given []TemplateVault and assigns it to the Vaults field.
func (o *Template) SetVaults(v []TemplateVault) {
	o.Vaults = v
}

func (o Template) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Template) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.InventoryId) {
		toSerialize["inventory_id"] = o.InventoryId
	}
	if !IsNil(o.RepositoryId) {
		toSerialize["repository_id"] = o.RepositoryId
	}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if !IsNil(o.ViewId) {
		toSerialize["view_id"] = o.ViewId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Playbook) {
		toSerialize["playbook"] = o.Playbook
	}
	if !IsNil(o.Arguments) {
		toSerialize["arguments"] = o.Arguments
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AllowOverrideArgsInTask) {
		toSerialize["allow_override_args_in_task"] = o.AllowOverrideArgsInTask
	}
	if !IsNil(o.SuppressSuccessAlerts) {
		toSerialize["suppress_success_alerts"] = o.SuppressSuccessAlerts
	}
	if !IsNil(o.App) {
		toSerialize["app"] = o.App
	}
	if !IsNil(o.GitBranch) {
		toSerialize["git_branch"] = o.GitBranch
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Autorun) {
		toSerialize["autorun"] = o.Autorun
	}
	if !IsNil(o.SurveyVars) {
		toSerialize["survey_vars"] = o.SurveyVars
	}
	if !IsNil(o.Vaults) {
		toSerialize["vaults"] = o.Vaults
	}
	return toSerialize, nil
}

type NullableTemplate struct {
	value *Template
	isSet bool
}

func (v NullableTemplate) Get() *Template {
	return v.value
}

func (v *NullableTemplate) Set(val *Template) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplate(val *Template) *NullableTemplate {
	return &NullableTemplate{value: val, isSet: true}
}

func (v NullableTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


