/*
Semaphore API

Semaphore API provides endpoints for managing and interacting with the Semaphore UI. This documentation outlines the available operations and data models. 

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package semaphore

import (
	"encoding/json"
)

// checks if the AccessKeyRequestSsh type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessKeyRequestSsh{}

// AccessKeyRequestSsh struct for AccessKeyRequestSsh
type AccessKeyRequestSsh struct {
	Login *string `json:"login,omitempty"`
	Passphrase *string `json:"passphrase,omitempty"`
	PrivateKey *string `json:"private_key,omitempty"`
}

// NewAccessKeyRequestSsh instantiates a new AccessKeyRequestSsh object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessKeyRequestSsh() *AccessKeyRequestSsh {
	this := AccessKeyRequestSsh{}
	return &this
}

// NewAccessKeyRequestSshWithDefaults instantiates a new AccessKeyRequestSsh object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessKeyRequestSshWithDefaults() *AccessKeyRequestSsh {
	this := AccessKeyRequestSsh{}
	return &this
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *AccessKeyRequestSsh) GetLogin() string {
	if o == nil || IsNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeyRequestSsh) GetLoginOk() (*string, bool) {
	if o == nil || IsNil(o.Login) {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *AccessKeyRequestSsh) HasLogin() bool {
	if o != nil && !IsNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *AccessKeyRequestSsh) SetLogin(v string) {
	o.Login = &v
}

// GetPassphrase returns the Passphrase field value if set, zero value otherwise.
func (o *AccessKeyRequestSsh) GetPassphrase() string {
	if o == nil || IsNil(o.Passphrase) {
		var ret string
		return ret
	}
	return *o.Passphrase
}

// GetPassphraseOk returns a tuple with the Passphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeyRequestSsh) GetPassphraseOk() (*string, bool) {
	if o == nil || IsNil(o.Passphrase) {
		return nil, false
	}
	return o.Passphrase, true
}

// HasPassphrase returns a boolean if a field has been set.
func (o *AccessKeyRequestSsh) HasPassphrase() bool {
	if o != nil && !IsNil(o.Passphrase) {
		return true
	}

	return false
}

// SetPassphrase gets a reference to the given string and assigns it to the Passphrase field.
func (o *AccessKeyRequestSsh) SetPassphrase(v string) {
	o.Passphrase = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *AccessKeyRequestSsh) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey) {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeyRequestSsh) GetPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKey) {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *AccessKeyRequestSsh) HasPrivateKey() bool {
	if o != nil && !IsNil(o.PrivateKey) {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *AccessKeyRequestSsh) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

func (o AccessKeyRequestSsh) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessKeyRequestSsh) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	if !IsNil(o.Passphrase) {
		toSerialize["passphrase"] = o.Passphrase
	}
	if !IsNil(o.PrivateKey) {
		toSerialize["private_key"] = o.PrivateKey
	}
	return toSerialize, nil
}

type NullableAccessKeyRequestSsh struct {
	value *AccessKeyRequestSsh
	isSet bool
}

func (v NullableAccessKeyRequestSsh) Get() *AccessKeyRequestSsh {
	return v.value
}

func (v *NullableAccessKeyRequestSsh) Set(val *AccessKeyRequestSsh) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessKeyRequestSsh) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessKeyRequestSsh) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessKeyRequestSsh(val *AccessKeyRequestSsh) *NullableAccessKeyRequestSsh {
	return &NullableAccessKeyRequestSsh{value: val, isSet: true}
}

func (v NullableAccessKeyRequestSsh) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessKeyRequestSsh) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


