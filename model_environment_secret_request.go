/*
Semaphore API

Semaphore API provides endpoints for managing and interacting with the Semaphore UI. This documentation outlines the available operations and data models. 

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package semaphore

import (
	"encoding/json"
)

// checks if the EnvironmentSecretRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentSecretRequest{}

// EnvironmentSecretRequest struct for EnvironmentSecretRequest
type EnvironmentSecretRequest struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Secret *string `json:"secret,omitempty"`
	Type *string `json:"type,omitempty"`
	Operation *string `json:"operation,omitempty"`
}

// NewEnvironmentSecretRequest instantiates a new EnvironmentSecretRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentSecretRequest() *EnvironmentSecretRequest {
	this := EnvironmentSecretRequest{}
	return &this
}

// NewEnvironmentSecretRequestWithDefaults instantiates a new EnvironmentSecretRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentSecretRequestWithDefaults() *EnvironmentSecretRequest {
	this := EnvironmentSecretRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnvironmentSecretRequest) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretRequest) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnvironmentSecretRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *EnvironmentSecretRequest) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnvironmentSecretRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EnvironmentSecretRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnvironmentSecretRequest) SetName(v string) {
	o.Name = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *EnvironmentSecretRequest) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretRequest) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *EnvironmentSecretRequest) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *EnvironmentSecretRequest) SetSecret(v string) {
	o.Secret = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EnvironmentSecretRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EnvironmentSecretRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EnvironmentSecretRequest) SetType(v string) {
	o.Type = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *EnvironmentSecretRequest) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentSecretRequest) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *EnvironmentSecretRequest) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *EnvironmentSecretRequest) SetOperation(v string) {
	o.Operation = &v
}

func (o EnvironmentSecretRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentSecretRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	return toSerialize, nil
}

type NullableEnvironmentSecretRequest struct {
	value *EnvironmentSecretRequest
	isSet bool
}

func (v NullableEnvironmentSecretRequest) Get() *EnvironmentSecretRequest {
	return v.value
}

func (v *NullableEnvironmentSecretRequest) Set(val *EnvironmentSecretRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentSecretRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentSecretRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentSecretRequest(val *EnvironmentSecretRequest) *NullableEnvironmentSecretRequest {
	return &NullableEnvironmentSecretRequest{value: val, isSet: true}
}

func (v NullableEnvironmentSecretRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentSecretRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


