/*
Semaphore API

Semaphore API provides endpoints for managing and interacting with the Semaphore UI. This documentation outlines the available operations and data models. 

API version: 2.13.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package semaphore

import (
	"encoding/json"
)

// checks if the ScheduleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduleRequest{}

// ScheduleRequest struct for ScheduleRequest
type ScheduleRequest struct {
	Id *int32 `json:"id,omitempty"`
	CronFormat *string `json:"cron_format,omitempty"`
	ProjectId *int32 `json:"project_id,omitempty"`
	TemplateId *int32 `json:"template_id,omitempty"`
	Name *string `json:"name,omitempty"`
	Active *bool `json:"active,omitempty"`
}

// NewScheduleRequest instantiates a new ScheduleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleRequest() *ScheduleRequest {
	this := ScheduleRequest{}
	return &this
}

// NewScheduleRequestWithDefaults instantiates a new ScheduleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleRequestWithDefaults() *ScheduleRequest {
	this := ScheduleRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ScheduleRequest) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleRequest) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ScheduleRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ScheduleRequest) SetId(v int32) {
	o.Id = &v
}

// GetCronFormat returns the CronFormat field value if set, zero value otherwise.
func (o *ScheduleRequest) GetCronFormat() string {
	if o == nil || IsNil(o.CronFormat) {
		var ret string
		return ret
	}
	return *o.CronFormat
}

// GetCronFormatOk returns a tuple with the CronFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleRequest) GetCronFormatOk() (*string, bool) {
	if o == nil || IsNil(o.CronFormat) {
		return nil, false
	}
	return o.CronFormat, true
}

// HasCronFormat returns a boolean if a field has been set.
func (o *ScheduleRequest) HasCronFormat() bool {
	if o != nil && !IsNil(o.CronFormat) {
		return true
	}

	return false
}

// SetCronFormat gets a reference to the given string and assigns it to the CronFormat field.
func (o *ScheduleRequest) SetCronFormat(v string) {
	o.CronFormat = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ScheduleRequest) GetProjectId() int32 {
	if o == nil || IsNil(o.ProjectId) {
		var ret int32
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleRequest) GetProjectIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ScheduleRequest) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given int32 and assigns it to the ProjectId field.
func (o *ScheduleRequest) SetProjectId(v int32) {
	o.ProjectId = &v
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise.
func (o *ScheduleRequest) GetTemplateId() int32 {
	if o == nil || IsNil(o.TemplateId) {
		var ret int32
		return ret
	}
	return *o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleRequest) GetTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TemplateId) {
		return nil, false
	}
	return o.TemplateId, true
}

// HasTemplateId returns a boolean if a field has been set.
func (o *ScheduleRequest) HasTemplateId() bool {
	if o != nil && !IsNil(o.TemplateId) {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given int32 and assigns it to the TemplateId field.
func (o *ScheduleRequest) SetTemplateId(v int32) {
	o.TemplateId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ScheduleRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ScheduleRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ScheduleRequest) SetName(v string) {
	o.Name = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ScheduleRequest) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleRequest) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ScheduleRequest) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ScheduleRequest) SetActive(v bool) {
	o.Active = &v
}

func (o ScheduleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CronFormat) {
		toSerialize["cron_format"] = o.CronFormat
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.TemplateId) {
		toSerialize["template_id"] = o.TemplateId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	return toSerialize, nil
}

type NullableScheduleRequest struct {
	value *ScheduleRequest
	isSet bool
}

func (v NullableScheduleRequest) Get() *ScheduleRequest {
	return v.value
}

func (v *NullableScheduleRequest) Set(val *ScheduleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleRequest(val *ScheduleRequest) *NullableScheduleRequest {
	return &NullableScheduleRequest{value: val, isSet: true}
}

func (v NullableScheduleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


